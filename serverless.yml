service: s3-demo

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs18.x
  region: ca-central-1
  environment:
    BUCKET_NAME: ${self:custom.bucketName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: arn:aws:s3:::${self:custom.bucketName}/*

functions:
  postObject:
    handler: lambdas/src/index.postHandler
    events:
      - http:
          path: upload
          method: post
          cors: true
    environment:
      BUCKET_NAME: ${self:custom.bucketName}

  getObject:
    handler: lambdas/src/index.getHandler
    events:
      - http:
          path: download/{key}
          method: get
          cors: true
    environment:
      BUCKET_NAME: ${self:custom.bucketName}

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}

custom:
  bucketName: shravani-serverless-s3-bucket
